name: ci

on:
  # 手动触发事件
  workflow_dispatch:
    inputs:
      enable:
        description: "启用或禁用自动 GitHub 自动全绿功能"
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
  push:
    branches:
      - master
  schedule:
    # 每 15 分钟尝试触发一次，一天有 96 个 15 分钟的时间段
    - cron: "*/15 * * * *"
  delete:
    branches:
      - '*'

jobs:
  autogreen:
    runs-on: ubuntu-latest
    # 检查是否满足触发条件
    if: |
      (github.event_name == 'schedule' &&
        (
          "`expr ${{ github.run_number }} % 4`" == "0" ||
          "`expr ${{ github.run_number }} % 3`" == "0" ||
          "`expr ${{ github.run_number }} % 2`" == "0"
        )
      ) ||
      github.event_name == 'push' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.enable == 'true')
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Auto green
        run: |
          set -e
          git config --local user.email ${{ secrets.EMAIL }}
          git config --local user.name ${{ secrets.NAME }}
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          echo "Remote repository URL: $(git remote get-url origin)"
          git pull --rebase
          commit_message="Keep writing documents at $(date +'%Y-%m-%d %H:%M:%S')"
          git commit --allow-empty -m "$commit_message"
          echo "Trying to push changes..."
          git push || { echo "Push failed. Check the remote repository URL and permissions."; exit 1; }

  auto_delete:
    runs-on: ubuntu-latest
    if: github.event_name == 'delete'
    steps:
      - name: Print event details
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Branch ref: ${{ github.event.ref }}"
      - name: Print deletion message
        run: |
          echo "Branch ${{ github.event.ref }} has been deleted. Cleaning up related resources if needed."

  keep_last_three_runs:
    runs-on: ubuntu-latest
    steps:
      - name: Get all workflow runs
        id: get-runs
        run: |
          runs=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/runs" | jq -r '.workflow_runs[].id')
          echo "::set-output name=runs::$runs"
      - name: Delete old runs
        run: |
          runs=(${{ steps.get-runs.outputs.runs }})
          num_runs=${#runs[@]}
          if [ $num_runs -gt 3 ]; then
            for ((i=0; i<num_runs-3; i++)); do
              run_id=${runs[$i]}
              curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"
              echo "Deleted run $run_id"
            done
          fi    
